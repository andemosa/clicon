/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WishlistRouteImport } from './routes/wishlist'
import { Route as ShopRouteImport } from './routes/shop'
import { Route as CompareRouteImport } from './routes/compare'
import { Route as CheckoutRouteImport } from './routes/checkout'
import { Route as CartRouteImport } from './routes/cart'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TrackIndexRouteImport } from './routes/track/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as TrackOrderIdRouteImport } from './routes/track/$orderId'
import { Route as ProductsProductIdRouteImport } from './routes/products/$productId'
import { Route as authVerifyEmailRouteImport } from './routes/(auth)/verify-email'
import { Route as authSignupRouteImport } from './routes/(auth)/signup'
import { Route as authSigninRouteImport } from './routes/(auth)/signin'
import { Route as authResetPasswordRouteImport } from './routes/(auth)/reset-password'
import { Route as authForgotPasswordRouteImport } from './routes/(auth)/forgot-password'

const WishlistRoute = WishlistRouteImport.update({
  id: '/wishlist',
  path: '/wishlist',
  getParentRoute: () => rootRouteImport,
} as any)
const ShopRoute = ShopRouteImport.update({
  id: '/shop',
  path: '/shop',
  getParentRoute: () => rootRouteImport,
} as any)
const CompareRoute = CompareRouteImport.update({
  id: '/compare',
  path: '/compare',
  getParentRoute: () => rootRouteImport,
} as any)
const CheckoutRoute = CheckoutRouteImport.update({
  id: '/checkout',
  path: '/checkout',
  getParentRoute: () => rootRouteImport,
} as any)
const CartRoute = CartRouteImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TrackIndexRoute = TrackIndexRouteImport.update({
  id: '/track/',
  path: '/track/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const TrackOrderIdRoute = TrackOrderIdRouteImport.update({
  id: '/track/$orderId',
  path: '/track/$orderId',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsProductIdRoute = ProductsProductIdRouteImport.update({
  id: '/products/$productId',
  path: '/products/$productId',
  getParentRoute: () => rootRouteImport,
} as any)
const authVerifyEmailRoute = authVerifyEmailRouteImport.update({
  id: '/(auth)/verify-email',
  path: '/verify-email',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignupRoute = authSignupRouteImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const authSigninRoute = authSigninRouteImport.update({
  id: '/(auth)/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const authResetPasswordRoute = authResetPasswordRouteImport.update({
  id: '/(auth)/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const authForgotPasswordRoute = authForgotPasswordRouteImport.update({
  id: '/(auth)/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/compare': typeof CompareRoute
  '/shop': typeof ShopRoute
  '/wishlist': typeof WishlistRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/reset-password': typeof authResetPasswordRoute
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/verify-email': typeof authVerifyEmailRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/track/$orderId': typeof TrackOrderIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/track': typeof TrackIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/compare': typeof CompareRoute
  '/shop': typeof ShopRoute
  '/wishlist': typeof WishlistRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/reset-password': typeof authResetPasswordRoute
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/verify-email': typeof authVerifyEmailRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/track/$orderId': typeof TrackOrderIdRoute
  '/dashboard': typeof DashboardIndexRoute
  '/track': typeof TrackIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/cart': typeof CartRoute
  '/checkout': typeof CheckoutRoute
  '/compare': typeof CompareRoute
  '/shop': typeof ShopRoute
  '/wishlist': typeof WishlistRoute
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/reset-password': typeof authResetPasswordRoute
  '/(auth)/signin': typeof authSigninRoute
  '/(auth)/signup': typeof authSignupRoute
  '/(auth)/verify-email': typeof authVerifyEmailRoute
  '/products/$productId': typeof ProductsProductIdRoute
  '/track/$orderId': typeof TrackOrderIdRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/track/': typeof TrackIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/cart'
    | '/checkout'
    | '/compare'
    | '/shop'
    | '/wishlist'
    | '/forgot-password'
    | '/reset-password'
    | '/signin'
    | '/signup'
    | '/verify-email'
    | '/products/$productId'
    | '/track/$orderId'
    | '/dashboard'
    | '/track'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/cart'
    | '/checkout'
    | '/compare'
    | '/shop'
    | '/wishlist'
    | '/forgot-password'
    | '/reset-password'
    | '/signin'
    | '/signup'
    | '/verify-email'
    | '/products/$productId'
    | '/track/$orderId'
    | '/dashboard'
    | '/track'
  id:
    | '__root__'
    | '/'
    | '/cart'
    | '/checkout'
    | '/compare'
    | '/shop'
    | '/wishlist'
    | '/(auth)/forgot-password'
    | '/(auth)/reset-password'
    | '/(auth)/signin'
    | '/(auth)/signup'
    | '/(auth)/verify-email'
    | '/products/$productId'
    | '/track/$orderId'
    | '/dashboard/'
    | '/track/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CartRoute: typeof CartRoute
  CheckoutRoute: typeof CheckoutRoute
  CompareRoute: typeof CompareRoute
  ShopRoute: typeof ShopRoute
  WishlistRoute: typeof WishlistRoute
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
  authSigninRoute: typeof authSigninRoute
  authSignupRoute: typeof authSignupRoute
  authVerifyEmailRoute: typeof authVerifyEmailRoute
  ProductsProductIdRoute: typeof ProductsProductIdRoute
  TrackOrderIdRoute: typeof TrackOrderIdRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  TrackIndexRoute: typeof TrackIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/wishlist': {
      id: '/wishlist'
      path: '/wishlist'
      fullPath: '/wishlist'
      preLoaderRoute: typeof WishlistRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/shop': {
      id: '/shop'
      path: '/shop'
      fullPath: '/shop'
      preLoaderRoute: typeof ShopRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/compare': {
      id: '/compare'
      path: '/compare'
      fullPath: '/compare'
      preLoaderRoute: typeof CompareRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/checkout': {
      id: '/checkout'
      path: '/checkout'
      fullPath: '/checkout'
      preLoaderRoute: typeof CheckoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/track/': {
      id: '/track/'
      path: '/track'
      fullPath: '/track'
      preLoaderRoute: typeof TrackIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/track/$orderId': {
      id: '/track/$orderId'
      path: '/track/$orderId'
      fullPath: '/track/$orderId'
      preLoaderRoute: typeof TrackOrderIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/$productId': {
      id: '/products/$productId'
      path: '/products/$productId'
      fullPath: '/products/$productId'
      preLoaderRoute: typeof ProductsProductIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/verify-email': {
      id: '/(auth)/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof authVerifyEmailRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CartRoute: CartRoute,
  CheckoutRoute: CheckoutRoute,
  CompareRoute: CompareRoute,
  ShopRoute: ShopRoute,
  WishlistRoute: WishlistRoute,
  authForgotPasswordRoute: authForgotPasswordRoute,
  authResetPasswordRoute: authResetPasswordRoute,
  authSigninRoute: authSigninRoute,
  authSignupRoute: authSignupRoute,
  authVerifyEmailRoute: authVerifyEmailRoute,
  ProductsProductIdRoute: ProductsProductIdRoute,
  TrackOrderIdRoute: TrackOrderIdRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  TrackIndexRoute: TrackIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
